# Package ######################################################################

[build-system]
requires = ["setuptools >= 61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "marlben"
description = "Marlben is a multi-agent reinforcement learning benchmark based on the NeuralMMO game engine."
readme = "README.md"
requires-python = ">= 3.9"
authors = [{ name = "JBR AI labs", email = "ego.vladi@gmail.com" }]
license = { text = "MIT License" }
keywords = ["Multi-Agent Reinforcement Learning", "game", "RL", "AI", "Public Good"]
classifiers = [
    "Development Status :: 4 - Beta",  # change to `5 - Production/Stable` when ready
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    'Intended Audience :: Science/Research',
    'Topic :: Scientific/Engineering :: Artificial Intelligence',
]
dependencies = [
    "numpy >=1.24.3",
    "pettingzoo >=1.14.0",
    "tqdm~=4.61.1",
    "scipy~=1.8.0",
    "imageio~=2.8.0",
    "Twisted~=19.2.0",
    "autobahn~=19.3.3",
    "vec_noise~=1.1.4",
    "matplotlib >=3.0",
    "openskill~=4.0.0",
    "gymnasium~=0.28.1"
]
dynamic = ["version"]

[project.optional-dependencies]
rllib = ["ray[rllib]~=1.5.2", "torch==1.11.0", "wandb~=0.15.4"]
all = [
    "ray[rllib]~=1.5.2", "torch==1.11.0", "wandb~=0.15.4"
]
testing = [
    "pytest ==7.1.1"
]

[project.urls]
Homepage = "https://github.com/jbr-ai-labs/marlben"
Repository = "https://github.com/jbr-ai-labs/marlben"
Documentation = "https://github.com/jbr-ai-labs/marlben/wiki"
"Bug Report" = "https://github.com/jbr-ai-labs/marlben/issues"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["marlben", "marlben.*"]

# Linters and Test tools #######################################################

[tool.black]
safe = true

[tool.isort]
atomic = true
profile = "black"
src_paths = ["marlben", "tests"]
extra_standard_library = ["typing_extensions"]
indent = 4
lines_after_imports = 2
multi_line_output = 3

[tool.pyright]
include = ["marlben/**", "tests/**"]
exclude = ["**/node_modules", "**/__pycache__"]
strict = []

typeCheckingMode = "basic"
pythonVersion = "3.9"
pythonPlatform = "All"
typeshedPath = "typeshed"
enableTypeIgnoreComments = true

# This is required as the CI pre-commit does not download the module (i.e. numpy, pygame, box2d)
#   Therefore, we have to ignore missing imports
reportMissingImports = "none"
# Some modules are missing type stubs, which is an issue when running pyright locally
reportMissingTypeStubs = false
# For warning and error, will raise an error when
reportInvalidTypeVarUse = "none"

# reportUnknownMemberType = "warning"  # -> raises 6035 warnings
# reportUnknownParameterType = "warning"  # -> raises 1327 warnings
# reportUnknownVariableType = "warning"  # -> raises 2585 warnings
# reportUnknownArgumentType = "warning"  # -> raises 2104 warnings
reportGeneralTypeIssues = "none"  # -> commented out raises 489 errors
reportUntypedFunctionDecorator = "none"  # -> pytest.mark.parameterize issues

reportPrivateUsage = "warning"
reportUnboundVariable = "warning"

[tool.pytest.ini_options]
filterwarnings = ["ignore::DeprecationWarning:marlben.*:"]
